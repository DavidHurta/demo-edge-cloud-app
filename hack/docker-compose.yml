#
#  Author: David Hurta (xhurta04)
#  Project: DIP
#
version: "2"

services:
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - "8080:8080"
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=edge
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-edge:9092
      - KAFKA_CLUSTERS_1_NAME=cloud
      - KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS=kafka-cloud:9092
  kafka-edge:
    hostname: kafka-edge
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9094:9094"
    volumes:
      - "kafka_data_edge:/bitnami"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-edge:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
  kafka-cloud:
    hostname: kafka-cloud
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9095:9095"
    volumes:
      - "kafka_data_cloud:/bitnami"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-cloud:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://localhost:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
  kafka-mirror:
      image: docker.io/bitnami/kafka:3.6
      command:
        # The connect mirror maker requires a configuration file.
        # So as to not create and maintain new container images,
        # or mount extra volumes etc.,
        # create the configuration file using the entrypoint.
        # The docker-compose file is for development and testing purposes.
        #
        # Made based on https://github.com/MicrosoftDocs/azure-docs/blob/10ea304a6328fe6dff75e43cdc1bb0425129a0e0/articles/hdinsight/kafka/kafka-mirrormaker-2-0-guide.md#sample-mirrormaker-20-configuration-file
        - bash
        - -c
        - |
          touch /tmp/mm2.properties
          echo "
          # Documentation for fields can be found at https://kafka.apache.org/documentation/
          clusters = source, destination
          source.bootstrap.servers = kafka-edge:9092
          destination.bootstrap.servers = kafka-cloud:9092
          source->destination.enabled = true
          
          source->destination.topics = edge-server-.*
          
          replication.factor=1
          
          # To remove the cluster prefix generated by default by the MirrorMaker2
          replication.policy.class=org.apache.kafka.connect.mirror.IdentityReplicationPolicy
          
          # Needed to mirror new topics in a reasonable time
          refresh.topics.enabled=true
          refresh.topics.interval.seconds=5
                    
          # Not necessarily needed for our demo application
          emit.heartbeats.enabled=true
          emit.checkpoints.enabled=true
          
          # Replication factors for internal topics          
          offset-syncs.topic.replication.factor=1
          offset.storage.replication.factor=1
          status.storage.replication.factor=1
          config.storage.replication.factor=1
          checkpoints.topic.replication.factor=1
          heartbeats.topic.replication.factor=1
          " > /tmp/mm2.properties
          /opt/bitnami/kafka/bin/connect-mirror-maker.sh /tmp/mm2.properties
  edge-cloud-app-edge-device:
    image: edge-cloud:latest
    command: ["--servers", "kafka-edge:9092", "--sleep", "100", "--count", "-1", "--mode", "EdgeDevice"]
  edge-cloud-app-edge-server:
    image: edge-cloud:latest
    command: ["--servers", "kafka-edge:9092", "--mode", "EdgeServer", "--aggregationWindow", "10"]
  edge-cloud-app-cloud-server:
    image: edge-cloud:latest
    command: ["--servers", "kafka-cloud:9092", "--mode", "CloudServer", "--aggregationWindow", "20"]
volumes:
  kafka_data_edge:
    driver: local
  kafka_data_cloud:
    driver: local
